<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd">


	<!--=================================================================================-->
	<!-- Scans the classpath for annotated components that will be auto-registered as    -->
	<!-- Spring beans. By default, the Spring-provided @Component, @Repository, @Service,-->
	<!-- @Controller, @RestController, @ControllerAdvice, and @Configuration stereotypes -->
	<!-- will be detected.																 -->
	<!--=================================================================================-->
	<context:component-scan base-package="com.learning.linnyk.jb._2_scope_lifecycle"/>

	<!--==================================================================================-->
	<!-- Activates various JSR 250's annotations to be detected in bean classes: Spring's -->
	<!-- @Component, @Required, @Autowired, @PostConstruct, @PreDestroy, @Resource        -->
	<!--==================================================================================-->
	<context:annotation-config/>



	<!--======================-->
	<!-- Bean scope singleton -->
	<!--======================-->
	<bean id="triangleSingleton" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.Triangle" scope="singleton"> <!--default scope is singleton-->
		<constructor-arg name="type" value="Equilateral"/>
		<constructor-arg name="color" value="Green"/>
	</bean>



	<!--======================-->
	<!-- Bean scope prototype -->
	<!--======================-->
	<bean id="trianglePrototype" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.Triangle" scope="prototype">
		<constructor-arg name="type" value="Equilateral"/>
		<constructor-arg name="color" value="Blue"/>
	</bean>



	<!--============================================-->
	<!-- Application Context Aware, Bean Name Aware -->
	<!--============================================-->
	<bean id="triangleAware" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.TriangleAware">
		<constructor-arg name="type" value="Equilateral"/>
		<constructor-arg name="color" value="Black"/>
	</bean>



	<!--=============================-->
	<!-- Bean Definition Inheritance -->
	<!--=============================-->
	<bean id="point1" class="com.learning.linnyk.jb._1_di.beans.Point">
		<property name="x" value="0"/>
		<property name="y" value="0"/>
	</bean>

	<bean id="point2" class="com.learning.linnyk.jb._1_di.beans.Point">
		<property name="x" value="-20"/>
		<property name="y" value="0"/>
	</bean>

	<bean id="point3" class="com.learning.linnyk.jb._1_di.beans.Point">
		<property name="x" value="0"/>
		<property name="y" value="20"/>
	</bean>

	<!-- if abstract="true" instance won't created and otherwise -->
	<bean id="parentTriangle" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.TriangleInheritance" abstract="true">
		<property name="pointA" ref="point1"/>
	</bean>


	<bean id="triangle1" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.TriangleInheritance" parent="parentTriangle">
		<property name="pointB" ref="point2"/>
		<property name="pointC" ref="point3"/>
	</bean>

	<bean id="triangle2" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.TriangleInheritance" parent="parentTriangle">
		<property name="pointB" ref="point2"/>
	</bean>



	<!--===========================-->
	<!-- Lifecycle bean definition -->
	<!--===========================-->
	<bean id="triangleLifecycle" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.TriangleLifecycle" init-method="initMethod" destroy-method="destroyMethod">
		<constructor-arg name="type" value="Equilateral"/>
		<constructor-arg name="color" value="Blue"/>
	</bean>



	<!--============================-->
	<!-- Define Bean post processor -->
	<!--============================-->
	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.DisplayNameBeanPostProcessor"/>



	<!--====================================-->
	<!-- Define Bean factory post processor -->
	<!--====================================-->
	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.MyBeanFactoryPostProcessor"/>



	<!--==================================================================-->
	<!-- Define bean from properties using PropertyPlaceholderConfigurer  -->
	<!--==================================================================-->
	<bean id="pointWithProperty" class="com.learning.linnyk.jb._1_di.beans.Point">
		<property name="x" value="${pointA.pointX}"/>
		<property name="y" value="${pointA.pointY}"/>
	</bean>

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:src/main/resources/jb/_2_scope_lifecycle/pointsconfig.properties"/>
	</bean>


	<!--======================================================-->
	<!--              Dependency holder                       -->
	<!--======================================================-->
	<bean id="dependency" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.dependency.Dependency">
		<constructor-arg name="name" value="spring-core"/>
	</bean>

	<bean id="holder" class="com.learning.linnyk.jb._2_scope_lifecycle.beans.dependency.Holder">
		<property name="dependency" ref="dependency"/>
	</bean>


	<!--=========================-->
	<!--    Autowiring beans     -->
	<!--=========================-->
	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.beans.autowired.Shop"/>

	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.beans.autowired.Person" />
	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.beans.autowired.Item"/>
	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.beans.autowired.Food"/>
	<bean class="com.learning.linnyk.jb._2_scope_lifecycle.beans.autowired.Building"/>

</beans>